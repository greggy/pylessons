>>> s1 = 'st9o0pQWt7fm'
>>> s2 = '1st0pQhWt7fm'
>>> 
>>> 
>>> 
>>> s1 == s2
False
>>> d = {}
>>> for i in range(len(s1)):
    d[s1[i]] = 1
    d[s2[i]] = 1

>>> 
>>> d
{'Q': 1, '7': 1, 'p': 1, 'h': 1, 'f': 1, 'm': 1, 'o': 1, '1': 1, '0': 1, 's': 1, 't': 1, 'W': 1, '9': 1}
>>> [x for x in d if x not in s1 or x not in s2]
['h', 'o', '1', '9']
>>> 
>>> 
>>> d.keys()
['Q', '7', 'p', 'h', 'f', 'm', 'o', '1', '0', 's', 't', 'W', '9']
>>> 
>>> 
>>> range(len(s1))
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
>>> 
>>> 
>>> a = 3
>>> b = a
>>> a + b
6
>>> import sys
>>> sys.getrefcount
<built-in function getrefcount>
>>> sys.getrefcount(3)
150
>>> sys.getrefcount(300)
2
>>> a
3
>>> b
3
>>> a = 5
>>> b
3
>>> l1 = [1, 2, 3]
>>> l2 = l1
>>> l1
[1, 2, 3]
\
>>> l2
[1, 2, 3]
>>> l1[0] = 5
\
>>> l1
[5, 2, 3]
\
>>> l2
[5, 2, 3]
>>> 
>>> 
>>> a
5
>>> b
3
>>> a = 7
>>> 
>>> 
>>> import math
>>> 
>>> 
>>> math.pi
3.141592653589793
>>> math.sqrt(124)
11.135528725660043
>>> 
>>> 
>>> import test3

Traceback (most recent call last):
  File "<pyshell#55>", line 1, in <module>
    import test3
ImportError: No module named test3
>>> import os
>>> os.chdir('/home/greg/py')

Traceback (most recent call last):
  File "<pyshell#57>", line 1, in <module>
    os.chdir('/home/greg/py')
OSError: [Errno 2] No such file or directory: '/home/greg/py'
>>> os.chdir('/home/greg/pylessons')
>>> import test3
>>> 
>>> 
>>> test3.test1
'test'
>>> 
>>> 
>>> test3.double(3)
6
>>> 
>>> 
>>> set([1, 45, 1, 45])
set([1, 45])
>>> 
>>> 
>>> s1 = set([1, 45, 1, 45])
>>> s2 = set([3, 1, 36])
>>> s2
set([1, 3, 36])
>>> s1 | s2
set([1, 3, 36, 45])
>>> s1 ^ s2
set([3, 36, 45])
>>> s1 & s2
set([1])
>>> 
>>> 
>>> l = range(11)
>>> l
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> set(l)
set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
>>> 
>>> str(11)
'11'
>>> int('132')
132
>>> int('qer')

Traceback (most recent call last):
  File "<pyshell#85>", line 1, in <module>
    int('qer')
ValueError: invalid literal for int() with base 10: 'qer'
>>> list('qer')
['q', 'e', 'r']
>>> 
>>> 
>>> enumerate('spam')
<enumerate object at 0x7f11c6423fa0>
>>> [x for x in enumerate('spam')]
[(0, 's'), (1, 'p'), (2, 'a'), (3, 'm')]
>>> dict([x for x in enumerate('spam')])
{0: 's', 1: 'p', 2: 'a', 3: 'm'}
>>> l
[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
>>> 
>>> 
>>> s = 'abcd'
>>> s
'abcd'
>>> s = 'ab\ncd'
>>> s
'ab\ncd'
>>> print s
ab
cd
>>> s = 'ab\n\rcd'
>>> print s
ab

cd
>>> s = 'ab\ncd\tef'
>>> print s
ab
cd  ef
>>> 
>>> 
>>> 'Test list %s' % s2
'Test list set([1, 3, 36])'
>>> 'Test list %s and %s' % (s2, s1)
'Test list set([1, 3, 36]) and set([1, 45])'
>>> 'Test list %s and %s' % (s2, s1)
'Test list set([1, 3, 36]) and set([1, 45])'
>>> '%.2' % 1.0 / 3

Traceback (most recent call last):
  File "<pyshell#109>", line 1, in <module>
    '%.2' % 1.0 / 3
ValueError: incomplete format
>>> '%.2f' % 1.0 / 3

Traceback (most recent call last):
  File "<pyshell#110>", line 1, in <module>
    '%.2f' % 1.0 / 3
TypeError: unsupported operand type(s) for /: 'str' and 'int'
>>> '%0.2f' % 1.0 / 3

Traceback (most recent call last):
  File "<pyshell#111>", line 1, in <module>
    '%0.2f' % 1.0 / 3
TypeError: unsupported operand type(s) for /: 'str' and 'int'
>>> '%f' % 1.0 / 3

Traceback (most recent call last):
  File "<pyshell#112>", line 1, in <module>
    '%f' % 1.0 / 3
TypeError: unsupported operand type(s) for /: 'str' and 'int'
>>> 'Test list {0}'.format(s2)
'Test list set([1, 3, 36])'
\
>>> print('Test list {0}'.format(s2))
Test list set([1, 3, 36])
>>> print 'Test list {0}'.format(s2)
Test list set([1, 3, 36])
>>> print('Test list {0}'.format(s2))
Test list set([1, 3, 36])
>>> 
>>> 
>>> if 3 < 5: True

True
>>> if 3 < 5: True

True
>>> if 3 < 5: True
else: False

True
>>> if 3 >5: True
else: False

False
>>> d = []
>>> a = 5
>>> b = 7
>>> if a < b:
    d.append(a)

    
>>> d
[5]
>>> if a < b:
    d.append(a)
else:
    d.append(b)

    
>>> d
[5, 5]
>>> 
>>> 
>>> def fun1(x, b):
    return x*b

>>> fun1(5, 7)
35
>>> def fun1(x, b, t):
    return x*b+t

>>> fun1(5, 7, 11)
46
>>> fun1(5, 7)

Traceback (most recent call last):
  File "<pyshell#149>", line 1, in <module>
    fun1(5, 7)
TypeError: fun1() takes exactly 3 arguments (2 given)
>>> 
>>> 
>>> def mySum(s):
    return sum(list(s))

>>> mySum(12345)

Traceback (most recent call last):
  File "<pyshell#155>", line 1, in <module>
    mySum(12345)
  File "<pyshell#154>", line 2, in mySum
    return sum(list(s))
TypeError: 'int' object is not iterable
>>> def mySum(s):
    return sum(list(s))

>>> def mySum(s):
    return sum([int(x) for x in list(str(s))])

>>> mySum(12345)
15
